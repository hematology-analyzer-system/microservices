services:
  # Shared Postgres Database
  postgres:
    image: postgres:17-alpine
    container_name: shared-postgres
    environment:
      POSTGRES_DB: microservices
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: bavui4444
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./patient-service/database/init-patient-service.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d microservices"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB
  mongodb:
    image: mongo:7
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: bavui4444
      MONGO_INITDB_DATABASE: microservices
    volumes:
      - mongodb_data:/data/db
    ports:
      - "127.0.0.1:27017:27017"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "127.0.0.1:15672:15672"
      - "127.0.0.1:5672:5672"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # IAM Service
  iam-service:
    build:
      context: ./iam-service
      dockerfile: Dockerfile
    container_name: iam-service
    depends_on: [postgres, mongodb, rabbitmq]
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/microservices
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: bavui4444
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_SHOW_SQL: "true"
      SERVER_PORT: 8080
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
      # RabbitMQ
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      # MongoDB
      SPRING_DATA_MONGODB_URI: mongodb://admin:bavui4444@mongodb:27017/microservices?authSource=admin
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:9090:9090"
    networks:
      - app-network
    restart: unless-stopped

  # Patient Service
  patient-service:
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    container_name: patient-service
    depends_on: [postgres, mongodb, rabbitmq]
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/microservices
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: bavui4444
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_SHOW_SQL: "true"
      SERVER_PORT: 8081
      SERVER_SERVLET_CONTEXT_PATH: /patient
      # RabbitMQ
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      # MongoDB
      MONGO_URI_PATIENT: mongodb://admin:bavui4444@mongodb:27017/microservices?authSource=admin
    ports:
      - "127.0.0.1:8081:8081"
      - "127.0.0.1:9091:9091"
    networks:
      - app-network
    restart: unless-stopped
    env_file:
      - patient-service/.env      # Load env variable for rabbitMQ

  # Test Order Service
  testorder-service:
    build:
      context: ./testorder-service
      dockerfile: Dockerfile
    container_name: testorder-service
    depends_on: [postgres, mongodb, rabbitmq]
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/microservices
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: bavui4444
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_SHOW_SQL: "true"
      SERVER_PORT: 8082
      # RabbitMQ
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      # MongoDB
      SPRING_DATA_MONGODB_URI: mongodb://admin:bavui4444@mongodb:27017/microservices?authSource=admin
    ports:
      - "127.0.0.1:8082:8082"
      - "127.0.0.1:9092:9092"
    networks:
      - app-network
    restart: unless-stopped
    
volumes:
  postgres_data:
  mongodb_data:
networks:
  app-network:
    driver: bridge
