# IAM Service CI/CD Pipeline

.iam-service-changes: &iam-service-changes
  only:
    changes:
      - iam-service/**/*
      - compose.yml

# Build IAM Service
build-iam-service:
  <<: *iam-service-changes
  stage: build
  image: maven:3.9.4-eclipse-temurin-21
  before_script:
    - cd iam-service
  script:
    - echo "Building IAM Service..."
    - mvn $MAVEN_CLI_OPTS clean compile
  artifacts:
    paths:
      - iam-service/target/
    expire_in: 1 hour
  cache:
    key: iam-maven-$CI_COMMIT_REF_SLUG
    paths:
      - iam-service/.m2/repository/

# Test IAM Service (Optional - Manual trigger until tests are written)
test-iam-service:
  <<: *iam-service-changes
  stage: test
  image: maven:3.9.4-eclipse-temurin-21
  services:
    - postgres:17-alpine
  variables:
    POSTGRES_DB: iam_test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: test
    POSTGRES_HOST_AUTH_METHOD: trust
    SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/iam_test
    SPRING_DATASOURCE_USERNAME: postgres
    SPRING_DATASOURCE_PASSWORD: test
  before_script:
    - cd iam-service
  script:
    - echo "Running IAM Service tests..."
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    reports:
      junit: iam-service/target/surefire-reports/TEST-*.xml
      coverage_report:
        coverage_format: jacoco
        path: iam-service/target/site/jacoco/jacoco.xml
    paths:
      - iam-service/target/surefire-reports/
      - iam-service/target/site/jacoco/
    expire_in: 1 week
  coverage: '/Total.*?([0-9]{1,3})%/'
  dependencies:
    - build-iam-service
  when: manual  # Make tests optional until they are written
  allow_failure: true  # Don't block pipeline if tests fail

# Code Quality for IAM Service (Optional - Manual trigger)
code-quality-iam-service:
  <<: *iam-service-changes
  stage: test
  image: maven:3.9.4-eclipse-temurin-21
  before_script:
    - cd iam-service
  script:
    - echo "Running code quality checks for IAM Service..."
    - mvn $MAVEN_CLI_OPTS checkstyle:check
    - mvn $MAVEN_CLI_OPTS spotbugs:check
  artifacts:
    reports:
      codequality: iam-service/target/spotbugs.json
    paths:
      - iam-service/target/checkstyle-result.xml
      - iam-service/target/spotbugsXml.xml
    expire_in: 1 week
  allow_failure: true
  when: manual  # Make code quality checks optional
  dependencies:
    - build-iam-service

# Package IAM Service
package-iam-service:
  <<: *iam-service-changes
  stage: package
  image: maven:3.9.4-eclipse-temurin-21
  before_script:
    - cd iam-service
  script:
    - echo "Packaging IAM Service..."
    - mvn $MAVEN_CLI_OPTS package -DskipTests
  artifacts:
    paths:
      - iam-service/target/*.jar
    expire_in: 1 day
  dependencies:
    - build-iam-service  # Only depend on build, not tests

# Build Docker Image for IAM Service
docker-build-iam-service:
  <<: *iam-service-changes
  stage: package
  image: docker:latest
  services:
    - docker:dind
  variables:
    DATETIME: $(date +%Y%m%d-%H%M%S)
  before_script:
    - cd iam-service
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com
  script:
    - export DATETIME=$(date +%Y%m%d-%H%M%S)
    - echo "Building Docker image for IAM Service with tag $DATETIME"
    - docker build --platform linux/amd64 -t registry.gitlab.com/healthcare5314327/microservices/iam-service:$DATETIME .
    - docker push registry.gitlab.com/healthcare5314327/microservices/iam-service:$DATETIME
    - echo "Successfully pushed IAM service image"
  dependencies:
    - package-iam-service
  only:
    - main
    - develop
