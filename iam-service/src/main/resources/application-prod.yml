spring:
  application:
    name: iam-service

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false

<<<<<<< HEAD
  mail:
    host: ${SPRING_MAIL_HOST}
    port: ${SPRING_MAIL_PORT}
    username: ${SPRING_MAIL_USERNAME}
    password: ${SPRING_MAIL_PASSWORD}
    protocol: smtp
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

=======
>>>>>>> develop
  grpc:
    server:
      port: 9090

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    virtual-host: ${RABBITMQ_VHOST}
    ssl:
      enabled: true

  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI}

server:
  port: 8080
  servlet:
    context-path: /iam

management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,metrics}
  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:when-authorized}
  health:
    mail:
      enabled: false

logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:WARN}
    org.springframework.security: WARN
    org.hibernate.SQL: WARN

mailtrap:
  api:
    token: ${MAILTRAP_API_TOKEN}
  sender:
    email: ${MAILTRAP_SENDER_EMAIL}
    name: ${MAILTRAP_SENDER_NAME}

spaces:
  access-key: ${SPACES_ACCESS_KEY}
  secret-key: ${SPACES_SECRET_KEY}
  endpoint: https://sgp1.digitaloceanspaces.com
  bucket-name: fhard-microservices
  region: sgp1
