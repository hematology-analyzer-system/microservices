spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/testorder}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:bavui4444}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update # update | validate | create | create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  # MongoDB configuration for notifications
  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI:mongodb://localhost:27019/testorder_notifications}

  # RabbitMQ configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VIRTUAL_HOST:/}
    connection-timeout: 30000
    publisher-confirms: correlated
    publisher-returns: true
    template:
      mandatory: true
      retry:
        enabled: true
        initial-interval: 1000
        max-attempts: 3
        max-interval: 10000

server:
  port: 8082
  servlet:
    context-path: /testorder

jwt:
  secret: "my-super-ultra-promax-vip-pro-password-32-bytes-long"

management:
  endpoints:
    web:
      exposure:
        include: health,rabbitmq
  endpoint:
    health:
      show-details: always

app:
  encryption:
    secret-key: mySecretKey12345
