# Healthcare Microservices CI Pipeline
# Focus: Build, Test, Package (No Deployment)

variables:
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - validate
  - build
  - test
  - security
  - package

# Project structure validation
validate-project:
  stage: validate
  image: alpine:latest
  script:
    - echo "🔍 Validating project structure..."
    - |
      if [ ! -f "compose.yml" ]; then
        echo "❌ compose.yml not found"
        exit 1
      fi
    - |
      if [ ! -d "iam-service" ] || [ ! -d "patient-service" ]; then
        echo "❌ Required service directories not found"
        exit 1
      fi
    - echo "✅ Project structure validation passed"

# Include service-specific CI configurations
include:
  - local: 'iam-service/.gitlab-ci.yml'
  - local: 'patient-service/.gitlab-ci.yml'

# Dependency Security Scanning
dependency-scanning:
  stage: security
  image: maven:3.9.4-openjdk-21
  script:
    - echo "🔒 Running dependency security scan..."
    - |
      for service in iam-service patient-service; do
        if [ -d "$service" ]; then
          cd "$service"
          echo "Scanning $service dependencies..."
          mvn org.owasp:dependency-check-maven:check || true
          cd ..
        fi
      done
  artifacts:
    reports:
      dependency_scanning: "*/target/dependency-check-report.xml"
    expire_in: 1 week
  allow_failure: true

# Generate build summary
build-summary:
  stage: package
  image: alpine:latest
  script:
    - echo "📊 Generating CI build summary..."
    - |
      cat > build-summary.md << 'EOF'
      # 🏥 Healthcare Microservices Build Summary
      
      ## ✅ CI Pipeline Completed Successfully
      
      **Build Information:**
      - Java Version: OpenJDK 21
      - Maven Version: 3.9
      - Build Date: $(date)
      - Git Commit: $CI_COMMIT_SHA
      - Git Branch: $CI_COMMIT_REF_NAME
      
      **Services Built:**
      - 🔐 IAM Service
      - 👥 Patient Service
      
      **Artifacts Created:**
      - JAR files for both services
      - Docker images (ready for deployment)
      - Security scan reports
      
      **Next Steps:**
      - Review security scan results
      - Download artifacts for manual deployment
      - Set up deployment pipeline when ready
      
      **Docker Images Available:**
      - registry.gitlab.com/healthcare5314327/microservices/iam-service:DATETIME-TAG
      - registry.gitlab.com/healthcare5314327/microservices/patient-service:DATETIME-TAG
      
      Note: DATETIME-TAG format is YYYYMMDD-HHMMSS (e.g., 20250713-142530)
      EOF
    - echo "✅ Build summary created"
  artifacts:
    paths:
      - build-summary.md
    expire_in: 1 week